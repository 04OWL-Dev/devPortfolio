<%- include('../header') %>
<link rel="stylesheet" href="/css/mermaid.min.css">
<style>
.truncate-multiline {
            display: -webkit-box;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            -webkit-line-clamp: 3; /* Limit to 3 lines */
            line-clamp: 3;
            max-height: 4.5em; /* Adjust height for 3 lines */
        }
.gridjs-wrapper .gridjs .gridjs-wrapper table.gridjs-table tbody tr td {
    font-size: 0.1em; /* Cambiar el tamaño del texto a 0.8em */
}
</style>  

<h2 class="text-center">Listado de Productos</h2>

<div id="wrapper" class="container" style="width: auto;">
    <a href="/productos/nuevo" class="btn btn-primary">Nuevo</a>
    <div id="gridjs-table"></div>
</div>

<!--     Modal de eliminacion -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true" style="z-index: 1056;">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header d-flex justify-content-between">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              ¿Estás seguro de que deseas eliminar este producto?
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
              <button type="button" class="btn btn-danger" id="confirmDeleteButton">Eliminar</button>
            </div>
          </div>
        </div>
      </div>
<!--     Modal de eliminacion -->

<!--       Modal de detalles.  -->
<div class="modal fade " id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header justify-content-between">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <!-- Aquí se cargará el contenido dinámico -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>         
        </div>
      </div>
    </div>
  </div>
<!--   Fin Modal de detalles.  -->

    <!--    <script>
        // Interceptar los event listeners globalmente
        const originalAddEventListener = EventTarget.prototype.addEventListener;
        EventTarget.prototype.addEventListener = function(type, listener, options) {
            if (type === 'touchstart' || type === 'touchmove' || type === 'wheel') {
                if (typeof options === 'object') {
                    options.passive = true;
                } else {
                    options = {
                        passive: true
                    };
                }
            }
            originalAddEventListener.call(this, type, listener, options);
        };
    </script> -->

<div id="contenedor-mensajes"></div>        
<script src="/js/general.js"></script>     
<script>
    const userId = <%= session.user.roles %>;
    $(document).ready(function() {
        const mensaje = localStorage.getItem('mensaje');

        if (mensaje) {
            mostrarMensaje("completado", mensaje);
            localStorage.removeItem('mensaje'); // Limpiar el mensaje después de mostrarlo
        }

        $(document).on('click', '.eliminarProducto', function(event) {            
            const productId = $(this).data('id');
            const $row = $(this).closest('tr'); // Obtener la fila actual para posibles actualizaciones
            // Guardar el ID del producto y la fila en atributos de data del modal
            $('#confirmDeleteModal').data('productId', productId).data('row', $row).modal('show');
        });

        $('#confirmDeleteButton').on('click', function() {
            const modal = $('#confirmDeleteModal');
            const productId = modal.data('productId');
            const $row = modal.data('row');
            $.ajax({
                url: `/productos/eliminar/${productId}`,
                type: 'GET',
                success: function(response) {
                    // Actualizar la tabla o eliminar la fila
                    $row.remove(); // O actualiza la tabla según sea necesario
                    // Ocultar el modal
                    modal.modal('hide');
                    $("#myModal").modal('hide')
                    localStorage.setItem('mensaje','Se ha eliminado el producto de forma exitosa')
                    window.location.href = '/productos/lista'
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    // Manejo de errores
                    console.log(textStatus, errorThrown);
                }
            });
        });

        let i = 0;
        $(document).on('click', '.detalles', function() {
                i++;
                var id = $(this).data('id');
                var url = `/productos/detallesProducto/${id}`
                /* $('#myModal .modal-body').load(`/productos/detallesProducto/${id}`); */
                // Realizar la solicitud AJAX para cargar el contenido
                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function(response) {
                        // Condición para agregar los botones en el footer del modal si es necesario
                        if(i == 1) {
                            $('#myModal .modal-footer').append(`<a data-id="${id}" class="btn btn-danger eliminarProducto">Eliminar Producto</a>`);
                            $('#myModal .modal-footer').append(`<a href="/productos/modificar/${id}" class="btn btn-primary">Modificar Producto</a>`);                        
                        }
                        
                        // Insertar el contenido HTML generado por el EJS en el modal
                        $('#myModal .modal-body').html(response);

                        // Mostrar el modal
                        $('#myModal').modal('show');
                    },
                    error: function() {
                        // Si hay un error, mostrar un mensaje en el modal
                        $('#myModal .modal-body').html('<p>Error al cargar el contenido.</p>');
                        $('#myModal').modal('show');
                    }
                });
            });

    });


    // Obtener los datos desde el servidor
    fetch('/productos')
        .then(response => response.json())
        .then(data => {
            // Configurar Grid.js
            const grid = new gridjs.Grid({
                columns: [
                    {id: 'img', 
                        name: 'Imágen',
                        formatter: (cell,row) => gridjs.html(`<img src="/img/productos/${row.cells[1].data}.png" width= 30px; height=30px onerror="this.src='/img/productos/default.png'">`)
                    },                    
                    { id: 'codigo', name: 'Código' },
                    {
                        id: 'nombre',
                        name: 'Nombre',
                        width: '380px',
                        formatter: (cell) => gridjs.html(`<div class="truncate-multiline">${cell}</div>`)
                    },
                    { id: 'marca', name: 'Marca', width: '200px' },
                    { id: 'modelo', name: 'Modelo' },
                    { id: 'precio_venta', name: 'Precio Venta' },
                    { id: 'precio_compra', name: 'Precio Compra' },
                    { id: 'existencias', name: 'Existencias' },
                    /* {
                        id: 'acciones-modificar',
                        name: 'Modificar',
                        formatter: (cell, row) => {
                            return gridjs.html(`                      

                                <div class= "d-flex justify-content-center" style="width:100%">
                                    <a href="/productos/modificar/${row.cells[1].data}" class="btn btn-primary"><i class="fa-solid fa-pen-to-square"></i></a>
                                </div>     
                            `);
                        }
                    }, */
                    {
                        id: 'acciones-detalle',
                        name: 'Detalle',
                        formatter: (cell, row) => {
                            return gridjs.html(`
                                <div class= "d-flex justify-content-center" style="width:100%">
                                    <div class="btn btn-secondary detalles" data-id="${row.cells[1].data}" data-bs-toggle="modal" data-bs-target="#myModal">
                                    <i class="fa-solid fa-circle-info"></i>
                                    </div>
                                </div>
                                
                            `);
                        }
                    },
                    /* {
                        id: 'acciones-eliminar',
                        name: '',
                        formatter: (cell, row) => {
                            return gridjs.html(`
                                                             
                                <div class= "d-flex justify-content-center" style="width:100%">
                                    <a data-id = "${row.cells[1].data}" class="btn btn-danger eliminarProducto"><i class="fa-solid fa-trash"></i></a> 
                                </div>     
                            `);
                        }
                    } */
                ],
                data: data,
                pagination: {
                    enabled: true,
                    limit: 10
                },
                search: true,
                sort: true,
                resizable: true,
                language: {
                    search: {
                        placeholder: 'Buscar...'
                    },
                    pagination: {
                        previous: 'Anterior',
                        next: 'Siguiente',
                        showing: 'Mostrando',
                        results: () => 'Filas'
                    }
                }
            }).render(document.getElementById('gridjs-table'));
            if(userId!=1){
                grid.config.columns[10].hidden = true
                grid.forceRender()
            }
        });


        


</script>
<%- include('../footer') %>            